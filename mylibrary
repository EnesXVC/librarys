local EasyLib = {}

function EasyLib:CreateWindow(title)
    -- UI Elements
    local EasyLib = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TopBar = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local CloseButton = Instance.new("TextButton")
    local TabContainer = Instance.new("ScrollingFrame")
    local TabListLayout = Instance.new("UIListLayout")
    local ContentScrollingFrame = Instance.new("ScrollingFrame") -- Yeni eklenen ScrollingFrame
    local ContentListLayout = Instance.new("UIListLayout")

    -- Basic Properties
    EasyLib.Name = "EasyLib"
    EasyLib.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    EasyLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Main.Name = "Main"
    Main.Parent = EasyLib
    Main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Main.Position = UDim2.new(0.28, 0, 0.23, 0)
    Main.Size = UDim2.new(0.49, 0, 0.53, 0)
    UICorner.Parent = Main

    -- Top Bar
    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundTransparency = 0.96
    TopBar.Size = UDim2.new(1, 0, 0.17, 0)

    TextLabel.Parent = TopBar
    TextLabel.Text = title or "EasyLib"
    TextLabel.Font = Enum.Font.Jura
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextScaled = true

    CloseButton.Parent = TopBar
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.TextScaled = true
    CloseButton.Size = UDim2.new(0.04, 0, 0.56, 0)
    CloseButton.Position = UDim2.new(0.96, 0, 0, 0)

    -- Tab Container (Left Side)
    TabContainer.Parent = Main
    TabContainer.Size = UDim2.new(0.22, 0, 0.83, 0)
    TabContainer.Position = UDim2.new(0, 0, 0.17, 0)
    TabContainer.BackgroundTransparency = 1
    TabContainer.ScrollBarThickness = 3

    TabListLayout.Parent = TabContainer
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)

    -- Content ScrollingFrame (Right Side - Butonlar için)
    ContentScrollingFrame.Parent = Main
    ContentScrollingFrame.Size = UDim2.new(0.77, 0, 0.83, 0)
    ContentScrollingFrame.Position = UDim2.new(0.22, 0, 0.17, 0)
    ContentScrollingFrame.BackgroundTransparency = 1
    ContentScrollingFrame.ScrollBarThickness = 3
    ContentScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y -- Otomatik boyutlandırma

    ContentListLayout.Parent = ContentScrollingFrame
    ContentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentListLayout.Padding = UDim.new(0, 5)

    -- Draggable Window
    local dragging, dragInput, dragStart, startPos
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Close Button
    CloseButton.MouseButton1Click:Connect(function()
        EasyLib:Destroy()
    end)

    -- Window Methods
    local window = {}
    local tabs = {}

    function window:CreateTab(name)
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.Size = UDim2.new(0.9, 0, 0, 44)
        TabButton.Text = name
        TabButton.Font = Enum.Font.Jura
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
        TabButton.AutoButtonColor = false

        local UICorner = Instance.new("UICorner")
        UICorner.Parent = TabButton

        -- Tab Content Container
        local TabContent = Instance.new("Frame")
        TabContent.Name = name .. "_Content"
        TabContent.Parent = ContentScrollingFrame
        TabContent.Size = UDim2.new(1, 0, 0, 0) -- AutoSize için
        TabContent.BackgroundTransparency = 1
        TabContent.Visible = false

        local ContentLayout = Instance.new("UIListLayout")
        ContentLayout.Parent = TabContent
        ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ContentLayout.Padding = UDim.new(0, 5)

        -- Tab Selection Logic
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(tabs) do
                tab.Content.Visible = false
                tab.Button.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
            end
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        end)

        -- Tab Functions
        local tab = {}
        tab.Button = TabButton
        tab.Content = TabContent

        -- Add Button
        function tab:AddButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text
            Button.Parent = TabContent
            Button.Size = UDim2.new(0.9, 0, 0, 40)
            Button.Text = text
            Button.Font = Enum.Font.Jura
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
            Button.AutoButtonColor = true

            local UICorner = Instance.new("UICorner")
            UICorner.Parent = Button

            Button.MouseButton1Click:Connect(function()
                if callback then callback() end
            end)

            return Button
        end

        -- Add Toggle
        function tab:AddToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = text .. "_Toggle"
            ToggleFrame.Parent = TabContent
            ToggleFrame.Size = UDim2.new(0.9, 0, 0, 40)
            ToggleFrame.BackgroundTransparency = 1

            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Name = "ToggleButton"
            ToggleButton.Parent = ToggleFrame
            ToggleButton.Size = UDim2.new(0.7, 0, 1, 0)
            ToggleButton.Text = text
            ToggleButton.Font = Enum.Font.Jura
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
            ToggleButton.TextXAlignment = Enum.TextXAlignment.Left
            ToggleButton.AutoButtonColor = false

            local UICorner = Instance.new("UICorner")
            UICorner.Parent = ToggleButton

            local ToggleBox = Instance.new("Frame")
            ToggleBox.Name = "ToggleBox"
            ToggleBox.Parent = ToggleFrame
            ToggleBox.Size = UDim2.new(0.2, 0, 0.7, 0)
            ToggleBox.Position = UDim2.new(0.75, 0, 0.15, 0)
            ToggleBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

            local UICorner2 = Instance.new("UICorner")
            UICorner2.Parent = ToggleBox

            local ToggleTick = Instance.new("TextLabel")
            ToggleTick.Name = "Tick"
            ToggleTick.Parent = ToggleBox
            ToggleTick.Size = UDim2.new(1, 0, 1, 0)
            ToggleTick.Text = default and "✓" or ""
            ToggleTick.Font = Enum.Font.Jura
            ToggleTick.TextColor3 = Color3.fromRGB(0, 255, 0)
            ToggleTick.TextScaled = true
            ToggleTick.BackgroundTransparency = 1

            local isToggled = default or false

            local function updateToggle()
                ToggleTick.Text = isToggled and "✓" or ""
                if callback then callback(isToggled) end
            end

            ToggleButton.MouseButton1Click:Connect(function()
                isToggled = not isToggled
                updateToggle()
            end)

            ToggleBox.MouseButton1Click:Connect(function()
                isToggled = not isToggled
                updateToggle()
            end)

            return {
                Set = function(self, value)
                    isToggled = value
                    updateToggle()
                end,
                Get = function(self)
                    return isToggled
                end
            }
        end

        table.insert(tabs, tab)

        -- Select first tab by default
        if #tabs == 1 then
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        end

        return tab
    end

    return window
end

return EasyLib
