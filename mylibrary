local EasyLib = {}

-- Initialize the library
function EasyLib:CreateWindow(title)
    -- Create main GUI elements
    local EasyLib = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local Frame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TopBar = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local CloseButton = Instance.new("TextButton")
    local ScrollingFrame = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
    
    -- Basic properties
    EasyLib.Name = "EasyLib"
    EasyLib.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    EasyLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Main.Name = "Main"
    Main.Parent = EasyLib
    Main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.28, 0, 0.23, 0)
    Main.Size = UDim2.new(0.49, 0, 0.53, 0)
    UICorner.Parent = Main
    
    -- Top bar
    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundTransparency = 0.96
    TopBar.Size = UDim2.new(1, 0, 0.17, 0)
    
    TextLabel.Parent = TopBar
    TextLabel.BackgroundTransparency = 1
    TextLabel.Size = UDim2.new(0.63, 0, 0.96, 0)
    TextLabel.Font = Enum.Font.Jura
    TextLabel.Text = title or "EasyLib"
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextScaled = true
    TextLabel.TextStrokeColor3 = Color3.fromRGB(131, 131, 131)
    
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TopBar
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(0.96, 0, 0, 0)
    CloseButton.Size = UDim2.new(0.04, 0, 0.56, 0)
    CloseButton.Font = Enum.Font.Arial
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.TextScaled = true
    
    -- Tab area
    ScrollingFrame.Parent = Main
    ScrollingFrame.BackgroundTransparency = 1
    ScrollingFrame.Position = UDim2.new(0, 0, 0.17, 0)
    ScrollingFrame.Size = UDim2.new(0.22, 0, 0.83, 0)
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    
    UIListLayout.Parent = ScrollingFrame
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    -- Content area
    Frame.Parent = Main
    Frame.BackgroundTransparency = 0.98
    Frame.Position = UDim2.new(0.22, 0, 0.17, 0)
    Frame.Size = UDim2.new(0.77, 0, 0.83, 0)
    
    local contentListLayout = Instance.new("UIListLayout")
    contentListLayout.Parent = Frame
    contentListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    contentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    -- Window methods
    local window = {}
    local tabs = {}
    local currentTab = nil
    
    -- Close button functionality
    CloseButton.MouseButton1Click:Connect(function()
        EasyLib:Destroy()
    end)
    
    -- Create a new tab
    function window:CreateTab(name)
        local Tab = Instance.new("TextButton")
        Tab.Name = "Tab_"..name
        Tab.Parent = ScrollingFrame
        Tab.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
        Tab.Size = UDim2.new(0, 113, 0, 44)
        Tab.Font = Enum.Font.Jura
        Tab.Text = name
        Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tab.TextScaled = true
        Tab.TextXAlignment = Enum.TextXAlignment.Left
        
        local tabCorner = Instance.new("UICorner")
        tabCorner.Parent = Tab
        
        -- Update scrolling frame canvas size
        local function updateCanvasSize()
            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
        end
        updateCanvasSize()
        UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSize)
        
        -- Create tab content
        local tabContent = {
            Name = name,
            Buttons = {}
        }
        
        -- Tab selection functionality
        Tab.MouseButton1Click:Connect(function()
            -- Hide all content
            for _, button in pairs(tabContent.Buttons) do
                button.Visible = false
            end
            
            -- Show this tab's content
            for _, button in pairs(tabContent.Buttons) do
                button.Visible = true
            end
            
            currentTab = tabContent
        end)
        
        -- Add button to tab
        function tabContent:AddButton(buttonName, callback)
            local TextButton = Instance.new("TextButton")
            TextButton.Name = buttonName
            TextButton.Parent = Frame
            TextButton.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
            TextButton.Size = UDim2.new(0.7, 0, 0.13, 0)
            TextButton.Font = Enum.Font.Jura
            TextButton.Text = buttonName
            TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextButton.TextScaled = true
            TextButton.TextXAlignment = Enum.TextXAlignment.Left
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.Parent = TextButton
            
            TextButton.MouseButton1Click:Connect(function()
                if callback then
                    callback()
                end
            end)
            
            table.insert(tabContent.Buttons, TextButton)
            
            -- Only show if this is the current tab
            TextButton.Visible = currentTab == tabContent
            
            return TextButton
        end
        
        table.insert(tabs, tabContent)
        if #tabs == 1 then
            currentTab = tabContent
            -- Show first tab's content by default
            for _, button in pairs(tabContent.Buttons) do
                button.Visible = true
            end
        end
        
        return tabContent
    end
    
    return window
end

return EasyLib
